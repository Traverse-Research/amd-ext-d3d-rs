// Bindings generated by `windows-bindgen` 0.58.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]
pub mod Ext {
    pub mod D3D {
        windows_core::imp::define_interface!(
            IAmdExtD3DDevice,
            IAmdExtD3DDevice_Vtbl,
            0x8104c0fc_7413_410f_8e83_aa617e908648
        );
        impl core::ops::Deref for IAmdExtD3DDevice {
            type Target = windows_core::IUnknown;
            fn deref(&self) -> &Self::Target {
                unsafe { core::mem::transmute(self) }
            }
        }
        windows_core::imp::interface_hierarchy!(IAmdExtD3DDevice, windows_core::IUnknown);
        impl IAmdExtD3DDevice {
            pub unsafe fn CreateGraphicsPipelineState<T>(
                &self,
                pamdextcreateinfo: *const AmdExtD3DCreateInfo,
                pdesc : *const windows::Win32::Graphics::Direct3D12:: D3D12_GRAPHICS_PIPELINE_STATE_DESC,
            ) -> windows_core::Result<T>
            where
                T: windows_core::Interface,
            {
                let mut result__ = core::ptr::null_mut();
                (windows_core::Interface::vtable(self).CreateGraphicsPipelineState)(
                    windows_core::Interface::as_raw(self),
                    pamdextcreateinfo,
                    pdesc,
                    &T::IID,
                    &mut result__,
                )
                .and_then(|| windows_core::Type::from_abi(result__))
            }
        }
        #[repr(C)]
        pub struct IAmdExtD3DDevice_Vtbl {
            pub base__: windows_core::IUnknown_Vtbl,
            pub CreateGraphicsPipelineState: unsafe extern "system" fn(
                *mut core::ffi::c_void,
                *const AmdExtD3DCreateInfo,
                *const windows::Win32::Graphics::Direct3D12::D3D12_GRAPHICS_PIPELINE_STATE_DESC,
                *const windows_core::GUID,
                *mut *mut core::ffi::c_void,
            )
                -> windows_core::HRESULT,
        }
        windows_core::imp::define_interface!(
            IAmdExtD3DDevice1,
            IAmdExtD3DDevice1_Vtbl,
            0x4bbcaf68_eaf7_4fa4_b653_cb458c334a4e
        );
        impl core::ops::Deref for IAmdExtD3DDevice1 {
            type Target = IAmdExtD3DDevice;
            fn deref(&self) -> &Self::Target {
                unsafe { core::mem::transmute(self) }
            }
        }
        windows_core::imp::interface_hierarchy!(
            IAmdExtD3DDevice1,
            windows_core::IUnknown,
            IAmdExtD3DDevice
        );
        impl IAmdExtD3DDevice1 {
            pub unsafe fn PushMarker<P0, P1>(&self, pgfxcmdlist: P0, pmarker: P1)
            where
                P0: windows_core::Param<
                    windows::Win32::Graphics::Direct3D12::ID3D12GraphicsCommandList,
                >,
                P1: windows_core::Param<windows_core::PCSTR>,
            {
                (windows_core::Interface::vtable(self).PushMarker)(
                    windows_core::Interface::as_raw(self),
                    pgfxcmdlist.param().abi(),
                    pmarker.param().abi(),
                )
            }
            pub unsafe fn PopMarker<P0>(&self, pgfxcmdlist: P0)
            where
                P0: windows_core::Param<
                    windows::Win32::Graphics::Direct3D12::ID3D12GraphicsCommandList,
                >,
            {
                (windows_core::Interface::vtable(self).PopMarker)(
                    windows_core::Interface::as_raw(self),
                    pgfxcmdlist.param().abi(),
                )
            }
            pub unsafe fn SetMarker<P0, P1>(&self, pgfxcmdlist: P0, pmarker: P1)
            where
                P0: windows_core::Param<
                    windows::Win32::Graphics::Direct3D12::ID3D12GraphicsCommandList,
                >,
                P1: windows_core::Param<windows_core::PCSTR>,
            {
                (windows_core::Interface::vtable(self).SetMarker)(
                    windows_core::Interface::as_raw(self),
                    pgfxcmdlist.param().abi(),
                    pmarker.param().abi(),
                )
            }
        }
        #[repr(C)]
        pub struct IAmdExtD3DDevice1_Vtbl {
            pub base__: IAmdExtD3DDevice_Vtbl,
            pub PushMarker: unsafe extern "system" fn(
                *mut core::ffi::c_void,
                *mut core::ffi::c_void,
                windows_core::PCSTR,
            ),
            pub PopMarker:
                unsafe extern "system" fn(*mut core::ffi::c_void, *mut core::ffi::c_void),
            pub SetMarker: unsafe extern "system" fn(
                *mut core::ffi::c_void,
                *mut core::ffi::c_void,
                windows_core::PCSTR,
            ),
        }
        windows_core::imp::define_interface!(
            IAmdExtD3DFactory,
            IAmdExtD3DFactory_Vtbl,
            0x014937ec_9288_446f_a9ac_d75a8e3a984f
        );
        impl core::ops::Deref for IAmdExtD3DFactory {
            type Target = windows_core::IUnknown;
            fn deref(&self) -> &Self::Target {
                unsafe { core::mem::transmute(self) }
            }
        }
        windows_core::imp::interface_hierarchy!(IAmdExtD3DFactory, windows_core::IUnknown);
        impl IAmdExtD3DFactory {
            pub unsafe fn CreateInterface<P0, T>(&self, pouter: P0) -> windows_core::Result<T>
            where
                P0: windows_core::Param<windows_core::IUnknown>,
                T: windows_core::Interface,
            {
                let mut result__ = core::ptr::null_mut();
                (windows_core::Interface::vtable(self).CreateInterface)(
                    windows_core::Interface::as_raw(self),
                    pouter.param().abi(),
                    &T::IID,
                    &mut result__,
                )
                .and_then(|| windows_core::Type::from_abi(result__))
            }
        }
        #[repr(C)]
        pub struct IAmdExtD3DFactory_Vtbl {
            pub base__: windows_core::IUnknown_Vtbl,
            pub CreateInterface: unsafe extern "system" fn(
                *mut core::ffi::c_void,
                *mut core::ffi::c_void,
                *const windows_core::GUID,
                *mut *mut core::ffi::c_void,
            ) -> windows_core::HRESULT,
        }
        pub const AmdExtD3DStructPipelineState: AmdExtD3DStructType = AmdExtD3DStructType(1u32);
        pub const AmdExtD3DStructUnknown: AmdExtD3DStructType = AmdExtD3DStructType(0u32);
        #[repr(transparent)]
        #[derive(PartialEq, Eq, Copy, Clone, Default)]
        pub struct AmdExtD3DStructType(pub u32);
        impl windows_core::TypeKind for AmdExtD3DStructType {
            type TypeKind = windows_core::CopyType;
        }
        impl core::fmt::Debug for AmdExtD3DStructType {
            fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
                f.debug_tuple("AmdExtD3DStructType").field(&self.0).finish()
            }
        }
        #[repr(C)]
        #[derive(Clone, Copy, Debug, Eq, PartialEq)]
        pub struct AmdExtD3DCreateInfo {
            pub r#type: AmdExtD3DStructType,
            pub pNext: *mut core::ffi::c_void,
        }
        impl windows_core::TypeKind for AmdExtD3DCreateInfo {
            type TypeKind = windows_core::CopyType;
        }
        impl Default for AmdExtD3DCreateInfo {
            fn default() -> Self {
                unsafe { core::mem::zeroed() }
            }
        }
        #[repr(C)]
        #[derive(Clone, Copy, Debug, Eq, PartialEq)]
        pub struct AmdExtD3DPipelineCreateInfo {
            pub Base: AmdExtD3DCreateInfo,
            pub flags: AmdExtD3DPipelineFlags,
        }
        impl windows_core::TypeKind for AmdExtD3DPipelineCreateInfo {
            type TypeKind = windows_core::CopyType;
        }
        impl Default for AmdExtD3DPipelineCreateInfo {
            fn default() -> Self {
                unsafe { core::mem::zeroed() }
            }
        }
        #[repr(C)]
        #[derive(Clone, Copy, Debug, Eq, PartialEq)]
        pub struct AmdExtD3DPipelineFlags {
            pub _bitfield: u32,
        }
        impl windows_core::TypeKind for AmdExtD3DPipelineFlags {
            type TypeKind = windows_core::CopyType;
        }
        impl Default for AmdExtD3DPipelineFlags {
            fn default() -> Self {
                unsafe { core::mem::zeroed() }
            }
        }
        pub type PFNAmdExtD3DCreateInterface = Option<
            unsafe extern "system" fn(
                pouter: Option<windows_core::IUnknown>,
                riid: *const windows_core::GUID,
                ppvobject: *mut *mut core::ffi::c_void,
            ) -> windows_core::HRESULT,
        >;
    }
}
